<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>fuzzing on Hexgolems</title>
    <link>https://hexgolems.com/tags/fuzzing/</link>
    <description>Recent content in fuzzing on Hexgolems</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 12 Aug 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://hexgolems.com/tags/fuzzing/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>On Measuring and Visualizing Fuzzer Performance</title>
      <link>https://hexgolems.com/2020/08/on-measuring-and-visualizing-fuzzer-performance/</link>
      <pubDate>Wed, 12 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://hexgolems.com/2020/08/on-measuring-and-visualizing-fuzzer-performance/</guid>
      <description>A critique on how we evaluate fuzzer and a proposal for a better metric.</description>
    </item>
    
    <item>
      <title>Aurora</title>
      <link>https://hexgolems.com/2020/07/aurora/</link>
      <pubDate>Tue, 14 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://hexgolems.com/2020/07/aurora/</guid>
      <description>Aurora automatically identifies the root cause of bugs found via fuzzing. Published at USENIX Security 2020</description>
    </item>
    
    <item>
      <title>EthBMC</title>
      <link>https://hexgolems.com/2020/07/ethbmc/</link>
      <pubDate>Tue, 14 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://hexgolems.com/2020/07/ethbmc/</guid>
      <description>A bounded model checker for smart contracts, that can steal money. Published at USENIX Security 2020</description>
    </item>
    
    <item>
      <title>Ijon</title>
      <link>https://hexgolems.com/2020/07/ijon/</link>
      <pubDate>Tue, 14 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://hexgolems.com/2020/07/ijon/</guid>
      <description>Allows the user to guide the fuzzer through the state space of the target program. Published at Oakland S&amp;amp;P 2020</description>
    </item>
    
    <item>
      <title>Incorrectness Logic by Example</title>
      <link>https://hexgolems.com/2020/04/incorrectness-logic-by-example/</link>
      <pubDate>Sat, 04 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://hexgolems.com/2020/04/incorrectness-logic-by-example/</guid>
      <description>Understanding Incorrectness Logic for program analysis with lots of examples.</description>
    </item>
    
    <item>
      <title>Nautilus 2.0</title>
      <link>https://hexgolems.com/2020/04/nautilus-2.0/</link>
      <pubDate>Wed, 01 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://hexgolems.com/2020/04/nautilus-2.0/</guid>
      <description>Release of Nautilus 2.0 with many new features</description>
    </item>
    
    <item>
      <title>HotFuzz</title>
      <link>https://hexgolems.com/2019/12/hotfuzz/</link>
      <pubDate>Thu, 05 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://hexgolems.com/2019/12/hotfuzz/</guid>
      <description>Talking about our research on fuzzing and future research areas.</description>
    </item>
    
    <item>
      <title>Antifuzz</title>
      <link>https://hexgolems.com/2019/07/antifuzz/</link>
      <pubDate>Wed, 17 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://hexgolems.com/2019/07/antifuzz/</guid>
      <description>Investigate weak points in current fuzzers to protect software from fully automatic fuzzing. Published at USENIX Security 2019</description>
    </item>
    
    <item>
      <title>Grimoire</title>
      <link>https://hexgolems.com/2019/07/grimoire/</link>
      <pubDate>Wed, 17 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://hexgolems.com/2019/07/grimoire/</guid>
      <description>Automatically infer grammar like fragments during normal feedback fuzzing to improve test coverage. Published at USENIX Security 2019.</description>
    </item>
    
    <item>
      <title>Nautilus - Fuzzing with Grammars</title>
      <link>https://hexgolems.com/2018/12/nautilus-fuzzing-with-grammars/</link>
      <pubDate>Mon, 17 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://hexgolems.com/2018/12/nautilus-fuzzing-with-grammars/</guid>
      <description>An AFL style feedback fuzzer, that uses grammars to find more bugs. Written in Rust and published at NDSS 2019</description>
    </item>
    
    <item>
      <title>Redqueen</title>
      <link>https://hexgolems.com/2018/12/redqueen/</link>
      <pubDate>Mon, 17 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://hexgolems.com/2018/12/redqueen/</guid>
      <description>A binary fuzzer that automatically solves magic Bytes and checksums during fuzzing. Published at NDSS 2019.</description>
    </item>
    
    <item>
      <title>kAFL</title>
      <link>https://hexgolems.com/2017/08/kafl/</link>
      <pubDate>Thu, 17 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://hexgolems.com/2017/08/kafl/</guid>
      <description>An AFL style feedback fuzzer, that uses Intel-PT to trace operating systems without access to sourcecode. Published at USENIX Security 2017</description>
    </item>
    
  </channel>
</rss>