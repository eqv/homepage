<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>C on Hexgolems</title>
    <link>https://hexgolems.com/tags/c/</link>
    <description>Recent content in C on Hexgolems</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 14 Jul 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://hexgolems.com/tags/c/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Aurora</title>
      <link>https://hexgolems.com/2020/07/aurora/</link>
      <pubDate>Tue, 14 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://hexgolems.com/2020/07/aurora/</guid>
      <description>Aurora automatically identifies the root cause of bugs found via fuzzing. Published at USENIX Security 2020</description>
    </item>
    
    <item>
      <title>Ijon</title>
      <link>https://hexgolems.com/2020/07/ijon/</link>
      <pubDate>Tue, 14 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://hexgolems.com/2020/07/ijon/</guid>
      <description>Allows the user to guide the fuzzer through the state space of the target program. Published at Oakland S&amp;amp;P 2020</description>
    </item>
    
    <item>
      <title>Antifuzz</title>
      <link>https://hexgolems.com/2019/07/antifuzz/</link>
      <pubDate>Wed, 17 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://hexgolems.com/2019/07/antifuzz/</guid>
      <description>Investigate weak points in current fuzzers to protect software from fully automatic fuzzing. Published at USENIX Security 2019</description>
    </item>
    
    <item>
      <title>Redqueen</title>
      <link>https://hexgolems.com/2018/12/redqueen/</link>
      <pubDate>Mon, 17 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://hexgolems.com/2018/12/redqueen/</guid>
      <description>A binary fuzzer that automatically solves magic Bytes and checksums during fuzzing. Published at NDSS 2019.</description>
    </item>
    
    <item>
      <title>kAFL</title>
      <link>https://hexgolems.com/2017/08/kafl/</link>
      <pubDate>Thu, 17 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://hexgolems.com/2017/08/kafl/</guid>
      <description>An AFL style feedback fuzzer, that uses Intel-PT to trace operating systems without access to sourcecode. Published at USENIX Security 2017</description>
    </item>
    
    <item>
      <title>Pint</title>
      <link>https://hexgolems.com/2014/10/pint/</link>
      <pubDate>Wed, 01 Oct 2014 00:00:00 +0000</pubDate>
      
      <guid>https://hexgolems.com/2014/10/pint/</guid>
      <description>Use LUA scripting for dynamic binary instrumentation and analysis using PIN.</description>
    </item>
    
  </channel>
</rss>