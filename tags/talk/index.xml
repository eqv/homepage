<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>talk on Hexgolems</title>
    <link>https://hexgolems.com/tags/talk/</link>
    <description>Recent content in talk on Hexgolems</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 05 Dec 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://hexgolems.com/tags/talk/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>HotFuzz</title>
      <link>https://hexgolems.com/2019/12/hotfuzz/</link>
      <pubDate>Thu, 05 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://hexgolems.com/2019/12/hotfuzz/</guid>
      <description>Talking about our research on fuzzing and future research areas.</description>
    </item>
    
    <item>
      <title>Nautilus - Fuzzing with Grammars</title>
      <link>https://hexgolems.com/2018/12/nautilus-fuzzing-with-grammars/</link>
      <pubDate>Mon, 17 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://hexgolems.com/2018/12/nautilus-fuzzing-with-grammars/</guid>
      <description>An AFL style feedback fuzzer, that uses grammars to find more bugs. Written in Rust and published at NDSS 2019</description>
    </item>
    
    <item>
      <title>Redqueen</title>
      <link>https://hexgolems.com/2018/12/redqueen/</link>
      <pubDate>Mon, 17 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://hexgolems.com/2018/12/redqueen/</guid>
      <description>A binary fuzzer that automatically solves magic Bytes and checksums during fuzzing. Published at NDSS 2019.</description>
    </item>
    
    <item>
      <title>SMT Solver Workshop</title>
      <link>https://hexgolems.com/2016/08/smt-solver-workshop/</link>
      <pubDate>Mon, 01 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://hexgolems.com/2016/08/smt-solver-workshop/</guid>
      <description>A one day workshop on using SMT-Solvers and bounded model checker for reverse engineering and binary analysis.</description>
    </item>
    
  </channel>
</rss>