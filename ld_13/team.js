// Generated by CoffeeScript 1.12.7
(function() {
  Crafty.c("Team", {
    init: function() {
      return this.fleet = [];
    },
    planning_turn: function() {
      return this.perform_planning();
    }
  });

  Crafty.c("StateVis", {
    init: function() {
      return this.requires('2D, Canvas, Image,Centered, Tween');
    },
    stateVis: function(ship) {
      if (ship.is_alive()) {
        this.image("assets/symbol_own.png");
      } else {
        this.image("assets/symbol_dead.png");
      }
      this.w = 32;
      this.h = 32;
      this.origin("center");
      return this.set_pos(ship.get_pos());
    }
  });

  Crafty.c("SittingDuckAI", {
    init: function() {
      return this.requires("Team");
    },
    perform_planning: function() {
      var i, len, ref, ship;
      ref = this.fleet;
      for (i = 0, len = ref.length; i < len; i++) {
        ship = ref[i];
        ship.keyframes = [
          {
            end_pos: ship.get_pos(),
            center: null,
            radius: null,
            end_time: 3
          }
        ];
      }
      return window.currentLevel.next_planning_turn();
    }
  });

  Crafty.c("FadingImage", {
    init: function() {
      return this.requires("2D, Image, Canvas, Tween, Delay");
    },
    fadingImage: function(path) {
      this.x = 500;
      this.y = 100;
      this.image(path);
      this.alpha = 1;
      this.tween({
        alpha: 0
      }, 200);
      return this.delay(this.destroy, 4000, 0);
    }
  });

  Crafty.c("HumanPlayer", {
    init: function() {
      return this.requires("Team");
    },
    perform_planning: function() {
      var btn, e, i, j, k, len, len1, len2, ref, ref1, ref2, results, ship, ship_id;
      if (this.name === "Player 1") {
        Crafty.e("FadingImage").fadingImage("assets/player1.png");
      } else if (this.name === "Player 2") {
        Crafty.e("FadingImage").fadingImage("assets/player2.png");
      } else {
        console.log("unknown team", this.name);
      }
      ref = this.fleet;
      for (i = 0, len = ref.length; i < len; i++) {
        ship = ref[i];
        ship.addComponent("ControllableShip");
        Crafty.e("StateVis").stateVis(ship);
      }
      ref1 = Crafty("Ship");
      for (j = 0, len1 = ref1.length; j < len1; j++) {
        ship_id = ref1[j];
        ship = Crafty(ship_id);
        if (!ship.is_alive()) {
          Crafty.e("StateVis").stateVis(ship);
        }
      }
      btn = Crafty.e("NextTurnButton");
      btn.nextTurnButton(this);
      ref2 = this.fleet;
      results = [];
      for (k = 0, len2 = ref2.length; k < len2; k++) {
        ship = ref2[k];
        e = Crafty.e("ShipIcon");
        results.push(e.shipIcon(ship));
      }
      return results;
    },
    cleanup_planning: function() {
      var i, id, j, k, len, len1, len2, ref, ref1, ref2, results, ship;
      ref = Crafty("ShipIcon, NextTurnButton");
      for (i = 0, len = ref.length; i < len; i++) {
        id = ref[i];
        Crafty(id).remove();
      }
      ref1 = Crafty("StateVis");
      for (j = 0, len1 = ref1.length; j < len1; j++) {
        id = ref1[j];
        Crafty(id).destroy();
      }
      ref2 = this.fleet;
      results = [];
      for (k = 0, len2 = ref2.length; k < len2; k++) {
        ship = ref2[k];
        results.push(ship.remove_controll());
      }
      return results;
    }
  });

}).call(this);
